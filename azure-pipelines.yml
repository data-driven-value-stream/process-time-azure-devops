trigger: none

pr:
  branches:
    include:
      - 'main'

pool:
  vmImage: ubuntu-latest

parameters:
  - name: 'test_snapshots_runs'
    type: object
    default:
      - 157 # Example Run Trunk Based — PR
      - 159 # Example Run Trunk Based — no PR
      - 122 # Example Run Git Flow — PR

variables:
- name: PYTHON_VERSION
  value: 3.12.2
  
resources:
  repositories:
    - repository: process-time
      type: git
      name: process-time
      ref: main

steps:
- checkout: process-time
- checkout: self
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
  displayName: 'Use Python $(PYTHON_VERSION)'

- script: |
    cd process-time-azure-devops
    python -m pip install --upgrade pip
    pip install .[build]
  displayName: 'Install dependencies'

- ${{ each run in parameters.test_snapshots_runs }}: 
  - script: |
      cd process-time-azure-devops
      orgname="worldpwn"
      echo "orgname=$orgname"
      token=$(System.AccessToken)
      project="process-time"
      echo "project=$project"
      pipeline_id=2
      echo "pipeline_id=$pipeline_id"
      current_run_id=${{ run }}
      if [ $current_run_id -eq 122 ];
      then
        python src/process_time_azure_devops/__main__.py --org "$orgname" --token "$token" --project "$project" --pipeline-id "$pipeline_id" --current-run-id $current_run_id --production-branch-name "production" --development-branch-name "development"
      else
        python src/process_time_azure_devops/__main__.py --org "$orgname" --token "$token" --project "$project" --pipeline-id "$pipeline_id" --current-run-id $current_run_id
    displayName: '[${{ run }}] Test — Example Run'
    env:
      System.AccessToken: $(System.AccessToken)
  
  - publish: $(System.DefaultWorkingDirectory)/process-time-azure-devops/process_time_result_${{ run }}.json
    artifact: process_time_result_${{ run }}
    displayName: '[${{ run }}] Publish Result File'
  - script: |
      set -e
      snap=$(System.DefaultWorkingDirectory)/process-time-azure-devops/tests_snapshots/process_time_result_${{ run }}.json
      result=$(System.DefaultWorkingDirectory)/process-time-azure-devops/process_time_result_${{ run }}.json
      diff --brief <(sort $snap) <(sort $result) >/dev/null
      comp_value_=$?
      
      if [ $comp_value -eq 1 ];
      then
        echo 'Files are not the same'
        echo 1
      else
        echo 'Files are the same'
        exit 0
      fi
    displayName: '[${{ run }}] Compare Files'